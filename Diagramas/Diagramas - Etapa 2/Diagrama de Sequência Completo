@startuml

actor Cliente

Cliente -> PainelDeLogin: cadastrarUsuario(dados)
PainelDeLogin -> UsuarioRepository: validarEcriarUsuario(dados)
UsuarioRepository -> DatabaseManager: salvarUsuario(dados)
DatabaseManager --> UsuarioRepository: sucesso
UsuarioRepository --> PainelDeLogin: usuarioCriado
PainelDeLogin --> Cliente: Cadastro realizado, redirecionando
Cliente -> PainelDeLogin: fazerLogin(credenciais)
PainelDeLogin -> UsuarioRepository: verificarCredenciais(credenciais)
UsuarioRepository -> DatabaseManager: consultarDatabase()
DatabaseManager --> UsuarioRepository: dadosUsuario
UsuarioRepository --> PainelDeLogin: autenticado = true
PainelDeLogin -> PainelDoUsuario: abrirPainel()
PainelDoUsuario --> PainelDeLogin: painelAberto
PainelDeLogin --> Cliente: Login realizado
Cliente -> PainelDoUsuario: adicionarSaldo(valor)
PainelDoUsuario -> Caixa: processarPagamento(valor)
Caixa --> PainelDoUsuario: pagamentoConfirmado
PainelDoUsuario -> UsuarioRepository: atualizarSaldo(valor)
UsuarioRepository -> DatabaseManager: atualizarDatabase()
DatabaseManager --> UsuarioRepository: sucesso
UsuarioRepository --> PainelDoUsuario: saldoAtualizado
PainelDoUsuario --> Cliente: Saldo adicionado
Cliente -> PainelDoUsuario: alterarCadastro(novoLogin, novoEmail)
PainelDoUsuario -> UsuarioRepository: atualizarDados(novoLogin, novoEmail)
UsuarioRepository -> DatabaseManager: atualizarDatabase()
DatabaseManager --> UsuarioRepository: sucesso
UsuarioRepository --> PainelDoUsuario: dadosAtualizados
PainelDoUsuario --> Cliente: Cadastro alterado
Cliente -> PainelDoUsuario: marcarHorario(aparelho, data)
PainelDoUsuario -> Agenda: selecionarAparelhoEData(aparelho, data)
Agenda -> IntervaloDeUso: verificarDisponibilidade(data)
IntervaloDeUso --> Agenda: disponivel = true
Agenda -> Reserva: calcularValorTotal(aparelho)
Reserva --> Agenda: valorTotal
Agenda -> Reserva: criarReserva(cliente, aparelho, data, valorTotal)
Reserva -> ReservaRepository: salvarReserva(reserva)
ReservaRepository -> DatabaseManager: atualizarDatabase()
DatabaseManager --> ReservaRepository: sucesso
ReservaRepository --> Reserva: reservaSalva
Reserva --> Agenda: reservaConfirmada
Agenda --> PainelDoUsuario: Reserva realizada
PainelDoUsuario -> Cliente: Reserva confirmada
Cliente -> PainelDoUsuario: mostrarReservas()
PainelDoUsuario -> ReservaRepository: obterReservasPorUsuario(idCliente)
ReservaRepository -> DatabaseManager: consultarDatabase(idCliente)
DatabaseManager --> ReservaRepository: listaReservas
ReservaRepository --> PainelDoUsuario: listaReservas
PainelDoUsuario -> MinhasReservas: exibirReservas(listaReservas)
MinhasReservas --> PainelDoUsuario: reservasExibidas
PainelDoUsuario --> Cliente: Reservas exibidas
Cliente -> PainelDoUsuario: cancelarReserva(idReserva)
PainelDoUsuario -> Reserva: cancelar(idReserva)
Reserva -> ReservaRepository: atualizarStatus(idReserva, "cancelada")
ReservaRepository -> DatabaseManager: atualizarDatabase()
DatabaseManager --> ReservaRepository: sucesso
ReservaRepository --> Reserva: statusAtualizado
Reserva -> Agenda: liberarIntervalo(idReserva)
Agenda --> Reserva: intervaloLiberado
Reserva --> PainelDoUsuario: reservaCancelada
PainelDoUsuario --> Cliente: Reserva cancelada
Cliente -> PainelDoUsuario: finalizarSessao()
PainelDoUsuario -> Cliente: encerrarSessao()
Cliente --> PainelDoUsuario: sessaoEncerrada
PainelDoUsuario -> PainelDeLogin: redirecionar()
PainelDeLogin --> PainelDoUsuario: redirecionamentoCompleto
PainelDoUsuario --> Cliente: SessÃ£o finalizada, redirecionado

@enduml
